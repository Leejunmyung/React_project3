{"version":3,"sources":["shared/firebase.js","redux/modules/user.js","shared/Cookie.js","redux/modules/image.js","redux/modules/post.js","redux/modules/comment.js","redux/modules/heart.js","redux/configureStore.js","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","elements/Spinner.js","components/Heart.js","components/Post.js","shared/infinityScroll.js","pages/PostList.js","shared/common.js","pages/Login.js","pages/Signup.js","shared/Upload.js","pages/PostWrite.js","components/CommentList.js","components/CommentWrite.js","shared/Permit.js","pages/PostDetail.js","components/Header.js","shared/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore","storage","LOG_OUT","GET_USER","SET_USER","logOut","createAction","user","setUser","handleActions","state","action","produce","draft","name","value","exp","date","Date","setTime","getTime","document","cookie","toUTCString","setCookie","payload","is_login","console","log","deleteCookie","actionCreators","id","pwd","user_name","dispatch","getState","history","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","user_profile","uid","push","catch","error","errorCode","code","errorMessage","message","setPersistence","Auth","Persistence","SESSION","res","signInWithEmailAndPassword","onAuthStateChanged","email","signOut","replace","UPLOADING","UPLOAD_IMAGE","SET_PREVIEW","uploading","uploadImage","image_url","setPreview","preview","uploadImageFB","image","ref","put","snapshot","getDownloadURL","url","SET_POST","ADD_POST","EDIT_POST","LOADING","setPost","post_list","paging","addPost","post","editPost","post_id","loading","is_loading","initialPost","contents","names","comment_cnt","heart_cnt","insert_dt","moment","format","list","reduce","acc","cur","findIndex","a","unshift","idx","p","start","next","size","getPostFB","_paging","query","collection","orderBy","startAt","limit","get","docs","length","forEach","doc","_post","data","Object","keys","indexOf","user_info","pop","addPostFB","postDB","_user","user_id","_image","putString","add","imageActions","err","window","alert","editPostFB","_post_idx","update","getOnePostFB","SET_COMMENT","ADD_COMMENT","setComment","comment_list","addComment","comment","where","commentDB","find","l","increment","FieldValue","postActions","parseInt","SET_HEART","ADD_HEART","CANCEL_HEART","setHeart","user_list","addHeart","cancelHeart","filter","heartDB","heart","delete","uncrement","createBrowserHistory","rootReducer","combineReducers","User","Post","Image","Comment","Heart","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Grid","props","is_flex","width","margin","padding","bg","children","center","_onClick","styles","Fragment","GridBox","onClick","defalutProps","styled","div","shape","src","ImageCircle","AspectOutter","AspectInner","defaultProps","Text","bold","color","P","Input","label","placeholder","_onChange","type","multiLine","is_submit","ElTextarea","rows","onChange","ElInput","_onchange","textarea","input","Button","text","is_float","FloatButton","ElButton","button","Spinner","is_dim","SpinnerWrap","SpinnerSvg","heart_list","useSelector","useDispatch","React","useState","toggle","setToggle","useEffect","includes","IconButton","heartActions","style","fontSize","like_cnt","scr","is_me","InfinityScroll","callNext","is_next","_handleScroll","_","throttle","innerHeight","body","scrollHeight","documentElement","scrollTop","handleScroll","useCallback","addEventListener","removeEventListener","PostList","map","emailCheck","test","Login","setId","setPwd","e","target","userActions","Signup","pwd_check","setPwdCheck","setUserName","Upload","is_uploading","fileInput","useRef","reader","FileReader","file","current","files","readAsDataURL","onloadend","result","disabled","PostWrite","match","params","is_edit","setContents","setNames","goBack","check_button","CommentList","commentActions","c","CommentItem","CommentWrite","comment_text","setCommentText","Permit","_session_key","sessionStorage","getItem","PostDetail","post_idx","Header","is_session","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.95854bbf.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\"\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCE98NYeHvC4rVzvvsk5rUDSHUU8aZyRwE\",\r\n  authDomain: \"react-board-af319.firebaseapp.com\",\r\n  projectId: \"react-board-af319\",\r\n  storageBucket: \"react-board-af319.appspot.com\",\r\n  messagingSenderId: \"417985161357\",\r\n  appId: \"1:417985161357:web:686961d953e0ab7f275ac4\",\r\n  measurementId: \"G-0J7CJ7D78Q\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst apiKey = firebaseConfig.apiKey;\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nexport{auth, apiKey, firestore, storage};","import { createAction, handleAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\r\n\r\nimport { auth } from \"../../shared/firebase\";\r\nimport firebase from \"firebase/compat\";\r\n\r\n// actions\r\nconst LOG_OUT = \"LOG_OUT\";\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_USER = \"SET_USER\";\r\n\r\n// action creators\r\n\r\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\r\nconst getUser = createAction(GET_USER, (user) => ({ user }));\r\nconst setUser = createAction(SET_USER, (user) => ({ user }));\r\n\r\n//initialState\r\nconst initialState = {\r\n  user: null,\r\n  is_login: false,\r\n};\r\n\r\nconst user_initial = {\r\n  user_name: \"junmyung\",\r\n};\r\n\r\n// middleware actions\r\nconst loginFB = (id, pwd) => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) => {\r\n      auth\r\n        .signInWithEmailAndPassword(id, pwd)\r\n        .then((user) => {\r\n          console.log(user);\r\n          dispatch(\r\n            setUser({\r\n              user_name: user.user.displayName,\r\n              id: id,\r\n              user_profile: \"\",\r\n              uid: user.user.uid,\r\n            })\r\n          );\r\n\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n\r\n          console.log(errorCode, errorMessage);\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nconst signupFB = (id, pwd, user_name) => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth\r\n      .createUserWithEmailAndPassword(id, pwd)\r\n      .then((user) => {\r\n        console.log(user);\r\n\r\n        auth.currentUser\r\n          .updateProfile({\r\n            displayName: user_name,\r\n          })\r\n          .then(() => {\r\n            dispatch(\r\n              setUser({\r\n                user_name: user_name,\r\n                id: id,\r\n                user_profile: \"\",\r\n                uid: user.user.uid,\r\n              })\r\n            );\r\n            history.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n        // Signed in\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n\r\n        console.log(errorCode, errorMessage);\r\n        // ..\r\n      });\r\n  };\r\n};\r\n\r\nconst loginCheckFB = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(\r\n          setUser({\r\n            user_name: user.displayName,\r\n            user_profile: \"\",\r\n            id: user.email,\r\n            uid: user.uid,\r\n          })\r\n        );\r\n      }else{\r\n        dispatch(logOut());\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst logoutFB = () => {\r\n  return function (dispatch, getState, {history}){\r\n    auth.signOut().then(() => {\r\n      dispatch(logOut());\r\n      history.replace(\"/login\");\r\n    })\r\n  }\r\n}\r\n\r\n//reducer\r\nexport default handleActions(\r\n  {\r\n    [SET_USER]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        setCookie(\"is_login\", \"success\");\r\n        draft.user = action.payload.user;\r\n        draft.is_login = true;\r\n      }),\r\n\r\n    [LOG_OUT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        deleteCookie(\"is_login\");\r\n        draft.user = null;\r\n        draft.is_login = false;\r\n      }),\r\n\r\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\r\n  },\r\n  initialState\r\n);\r\n\r\n// action creator export\r\nconst actionCreators = {\r\n  logOut,\r\n  getUser,\r\n  signupFB,\r\n  loginFB,\r\n  loginCheckFB,\r\n  logoutFB,\r\n};\r\n\r\nexport { actionCreators };\r\n","const getCookie = (name) => {\r\n    let value = \"; \"+document.cookie;\r\n\r\n    let parts = value.split(`; ${name}=`);\r\n\r\n    if(parts.length === 2){\r\n        return parts.pop().split(\";\").shift();\r\n    }\r\n};\r\n\r\nconst setCookie = (name, value, exp = 5) => {\r\n\r\n    let date = new Date();\r\n    date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\r\n\r\n    document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\r\n};\r\n\r\nconst deleteCookie = (name) => {\r\n    let date = new Date(\"2020-01-01\").toUTCString();\r\n\r\n    console.log(date);\r\n\r\n    document.cookie = name+\"=; expires=\"+date;\r\n};\r\n\r\nexport {getCookie, setCookie, deleteCookie};","import { createAction, handleActions } from \"redux-actions\";\r\nimport produce from \"immer\";\r\n\r\nimport { storage } from \"../../shared/firebase\";\r\n\r\nconst UPLOADING = \"UPLOADING\";\r\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\r\nconst SET_PREVIEW = \"SET_PREVIEW\";\r\n\r\nconst uploading = createAction(UPLOADING, (uploading) => ({uploading}));\r\nconst uploadImage = createAction(UPLOAD_IMAGE, (image_url) => ({image_url}));\r\nconst setPreview = createAction(SET_PREVIEW, (preview) => ({preview}))\r\n\r\nconst initialState = {\r\n    image_url: '',\r\n    uploading: false,\r\n    preview: null,\r\n};\r\n\r\nconst uploadImageFB = (image) => {\r\n    return function(dispatch, getState, {history}){\r\n\r\n        dispatch(uploading(true));\r\n\r\n        const _upload = storage.ref(`images/${image.name}`).put(image);\r\n\r\n        _upload.then((snapshot) => {\r\n            console.log(snapshot);\r\n            snapshot.ref.getDownloadURL().then((url) => {\r\n                dispatch(uploadImage(url));\r\n                console.log(url);\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\nexport default handleActions({\r\n    [UPLOAD_IMAGE]: (state, action) => produce(state, (draft) => {\r\n        draft.image_url = action.payload.image_url;\r\n        draft.uploading = false;\r\n    }),\r\n    [UPLOADING]: (state, action) => produce(state, (draft) => {\r\n        draft.uploading = action.payload.uploading;\r\n    }),\r\n    [SET_PREVIEW]: (state, action) => produce(state, (draft) => {\r\n        draft.preview = action.payload.preview;\r\n    })\r\n}, initialState);\r\n\r\nconst actionCreators = {\r\n    uploadImage,\r\n    uploadImageFB,\r\n    setPreview,\r\n};\r\n\r\nexport {actionCreators};","import { createAction, handleAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { firestore, storage } from \"../../shared/firebase\";\r\n\r\nimport { actionCreators as imageActions } from \"./image\";\r\nimport \"moment\";\r\nimport moment from \"moment\";\r\n\r\nconst SET_POST = \"SET_POST\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst EDIT_POST = \"EDIT_POST\";\r\nconst LOADING = \"LOADING\";\r\n\r\nconst setPost = createAction(SET_POST, (post_list, paging) => ({ post_list, paging }));\r\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\r\nconst editPost = createAction(EDIT_POST, (post_id, post) => ({\r\n  post_id,\r\n  post,\r\n}));\r\nconst loading = createAction(LOADING, (is_loading) => ({is_loading}));\r\n\r\nconst initialState = {\r\n  list: [],\r\n  paging: {start: null, next: null, size: 3},\r\n  is_loading: false,\r\n};\r\n\r\nconst initialPost = {\r\n  // id: 0,\r\n  // user_info: {\r\n  //   user_name: \"junmyung\",\r\n  //   user_profile: \"https://i.ytimg.com/vi/9J67amvesFg/maxresdefault.jpg\",\r\n  // },\r\n  image_url: \"https://i.ytimg.com/vi/9J67amvesFg/maxresdefault.jpg\",\r\n  contents: \"\",\r\n  names:\"down\",\r\n  comment_cnt: 0,\r\n  heart_cnt: 0,\r\n  insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n};\r\n\r\nconst editPostFB = (post_id = null, post = {}) => {\r\n  return function (dispatch, getState, { history }) {\r\n    if (!post_id) {\r\n      window.alert(\"게시물 정보가 없어요!\");\r\n      return;\r\n    }\r\n    const _image = getState().image.preview;\r\n\r\n    const _post_idx = getState().post.list.findIndex((p) => p.id === post_id);\r\n    const _post = getState().post.list[_post_idx];\r\n\r\n    console.log(_post);\r\n\r\n    const postDB = firestore.collection(\"post\");\r\n\r\n    if (_image === _post.image_url) {\r\n      postDB\r\n        .doc(post_id)\r\n        .update(post)\r\n        .then((doc) => {\r\n          dispatch(editPost(post_id, { ...post }));\r\n          history.replace(\"/\");\r\n        });\r\n\r\n      return;\r\n    } else {\r\n      const user_id = getState().user.user.uid;\r\n      const _upload = storage\r\n        .ref(`images/${user_id}_${new Date().getTime()}`)\r\n        .putString(_image, \"data_url\");\r\n\r\n      _upload\r\n        .then((snapshot) => {\r\n          snapshot.ref\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              console.log(url);\r\n\r\n              return url;\r\n            })\r\n            .then((url) => {\r\n              postDB\r\n                .doc(post_id)\r\n                .update({ ...post, image_url: url })\r\n                .then((doc) => {\r\n                  dispatch(editPost(post_id, { ...post, image_url: url }));\r\n                  history.replace(\"/\");\r\n                });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nconst addPostFB = (contents = \"\", names=\"down\") => {\r\n  return function (dispatch, getState, { history }) {\r\n    const postDB = firestore.collection(\"post\");\r\n\r\n    const _user = getState().user.user;\r\n\r\n    const user_info = {\r\n      user_name: _user.user_name,\r\n      user_id: _user.uid,\r\n      user_profile: _user.user_profile,\r\n    };\r\n\r\n    const _post = {\r\n      ...initialPost,\r\n      contents: contents,\r\n      names: names,\r\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n    };\r\n\r\n    const _image = getState().image.preview;\r\n\r\n    console.log(_image);\r\n    console.log(typeof _image);\r\n\r\n    const _upload = storage\r\n      .ref(`images/${user_info.user_id}_${new Date().getTime()}`)\r\n      .putString(_image, \"data_url\");\r\n\r\n    _upload\r\n      .then((snapshot) => {\r\n        snapshot.ref\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            console.log(url);\r\n\r\n            return url;\r\n          })\r\n          .then((url) => {\r\n            postDB\r\n              .add({ ...user_info, ..._post, image_url: url })\r\n              .then((doc) => {\r\n                // 아이디를 추가해요!\r\n                let post = { user_info, ..._post, id: doc.id, image_url: url };\r\n                // 이제 리덕스에 넣어봅시다.\r\n                dispatch(addPost(post));\r\n                history.replace(\"/\");\r\n\r\n                dispatch(imageActions.setPreview(null));\r\n              })\r\n              .catch((err) => {\r\n                window.alert(\"앗! 포스트 작성에 문제가 있어요!\");\r\n                console.log(\"post 작성 실패!\", err);\r\n              });\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst getPostFB = (start = null, size = 3) => {\r\n  return function (dispatch, getState, { history }) {\r\n\r\n    let _paging = getState().post.paging;\r\n\r\n    if(_paging.start && !_paging.next){\r\n      return;\r\n    }\r\n\r\n    dispatch(loading(true));\r\n    const postDB = firestore.collection(\"post\");\r\n\r\n    let query = postDB.orderBy(\"insert_dt\",\"desc\");\r\n\r\n    if(start){\r\n      query = query.startAt(start);\r\n    }\r\n\r\n    query\r\n    .limit(size + 1)\r\n    .get()\r\n    .then(docs => {\r\n      let post_list = [];\r\n\r\n      let paging = {\r\n        start: docs.docs[0],\r\n        next: docs.docs.length === size + 1? docs.docs[docs.docs.length -1] : null,\r\n        size: size,\r\n      }\r\n\r\n      docs.forEach((doc) => {\r\n        let _post = doc.data();\r\n\r\n        // ['commenct_cnt', 'contents', ..]\r\n        let post = Object.keys(_post).reduce(\r\n          (acc, cur) => {\r\n            if (cur.indexOf(\"user_\") !== -1) {\r\n              return {\r\n                ...acc,\r\n                user_info: { ...acc.user_info, [cur]: _post[cur] },\r\n              };\r\n            }\r\n            return { ...acc, [cur]: _post[cur] };\r\n          },\r\n          { id: doc.id, user_info: {} }\r\n        );\r\n\r\n        post_list.push(post);\r\n      });\r\n\r\n      post_list.pop();\r\n\r\n      dispatch(setPost(post_list, paging));\r\n    });\r\n  };\r\n};\r\n\r\nconst getOnePostFB = (id) => {\r\n  return function(dispatch, getState, {history}){\r\n    const postDB = firestore.collection(\"post\");\r\n    postDB.doc(id).get().then(doc => {\r\n      console.log(doc, doc.data());\r\n      let _post = doc.data()\r\n      let post = Object.keys(_post).reduce(\r\n        (acc, cur) => {\r\n          if (cur.indexOf(\"user_\") !== -1) {\r\n            return {\r\n              ...acc,\r\n              user_info: { ...acc.user_info, [cur]: _post[cur] },\r\n            };\r\n          }\r\n          return { ...acc, [cur]: _post[cur] };\r\n        },\r\n        { id: doc.id, user_info: {} }\r\n      );\r\n\r\n      dispatch(setPost([post]));\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list.push(...action.payload.post_list);\r\n\r\n        draft.list = draft.list.reduce((acc, cur) => {\r\n          if(acc.findIndex(a => a.id === cur.id) === -1){\r\n            return [...acc, cur];\r\n          }else{\r\n            acc[acc.findIndex(a => a.id === cur.id)] = cur;\r\n            return acc;\r\n          }\r\n        }, []);\r\n\r\n\r\n        if(action.payload.paging){\r\n          draft.paging = action.payload.paging;\r\n        }\r\n        \r\n        draft.is_loading = false;\r\n      }),\r\n\r\n    [ADD_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list.unshift(action.payload.post);\r\n      }),\r\n    [EDIT_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        let idx = draft.list.findIndex((p) => p.id === action.payload.post_id);\r\n\r\n        draft.list[idx] = { ...draft.list[idx], ...action.payload.post };\r\n      }),\r\n    [LOADING]: (state, action) => produce(state, (draft) => {\r\n      draft.is_loading = action.payload.is_loading;\r\n    })\r\n  },\r\n  initialState\r\n);\r\n\r\nconst actionCreators = {\r\n  setPost,\r\n  addPost,\r\n  editPost,\r\n  getPostFB,\r\n  addPostFB,\r\n  editPostFB,\r\n  getOnePostFB,\r\n};\r\n\r\nexport { actionCreators };\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { firestore } from \"../../shared/firebase\";\r\nimport \"moment\";\r\nimport moment from \"moment\";\r\n\r\nimport firebase from \"firebase/compat\";\r\n\r\nimport { actionCreators as postActions } from \"./post\";\r\n\r\nconst SET_COMMENT = \"SET_COMMENT\";\r\nconst ADD_COMMENT = \"ADD_COMMENT\";\r\n\r\nconst LOADING = \"LOADING\";\r\n\r\nconst setComment = createAction(SET_COMMENT, (post_id, comment_list) => ({\r\n  post_id,\r\n  comment_list,\r\n}));\r\nconst addComment = createAction(ADD_COMMENT, (post_id, comment) => ({\r\n  post_id,\r\n  comment,\r\n}));\r\n\r\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\r\n\r\nconst initialState = {\r\n  list: {},\r\n  is_loading: false,\r\n};\r\nconst addCommentFB = (post_id, contents) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const commentDB = firestore.collection(\"comment\");\r\n    const user_info = getState().user.user;\r\n\r\n    let comment = {\r\n      post_id: post_id,\r\n      user_id: user_info.uid,\r\n      user_name: user_info.user_name,\r\n      user_profile: user_info.user_profile,\r\n      contents: contents,\r\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n    };\r\n\r\n    //댓글 +1 기능\r\n    commentDB.add(comment).then((doc) => {\r\n      const postDB = firestore.collection(\"post\");\r\n\r\n      const post = getState().post.list.find((l) => l.id === post_id);\r\n\r\n      const increment = firebase.firestore.FieldValue.increment(1);\r\n      comment = { ...comment, id: doc.id };\r\n      postDB\r\n        .doc(post_id)\r\n        .update({ comment_cnt: increment })\r\n        .then((_post) => {\r\n          dispatch(addComment(post_id, comment));\r\n\r\n          if (post) {\r\n            dispatch(\r\n              postActions.editPost(post_id, {\r\n                comment_cnt: parseInt(post.comment_cnt) + 1,\r\n              })\r\n            );\r\n          }\r\n        });\r\n    });\r\n  };\r\n};\r\nconst getCommentFB = (post_id = null) => {\r\n  return function (dispatch, getState, { history }) {\r\n    if (!post_id) {\r\n      return;\r\n    }\r\n    const commentDB = firestore.collection(\"comment\");\r\n\r\n    commentDB\r\n      .where(\"post_id\", \"==\", post_id)\r\n      .orderBy(\"insert_dt\", \"desc\")\r\n      .get()\r\n      .then((docs) => {\r\n        let list = [];\r\n\r\n        docs.forEach((doc) => {\r\n          list.push({ ...doc.data(), id: doc.id });\r\n        });\r\n\r\n        dispatch(setComment(post_id, list));\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"댓글 정보를 가져올 수가 없네요!\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_COMMENT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list[action.payload.post_id] = action.payload.comment_list;\r\n      }),\r\n    [ADD_COMMENT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list[action.payload.post_id].unshift(action.payload.comment);\r\n      }),\r\n    [LOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.is_loading = action.payload.is_loading;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst actionCreators = {\r\n  getCommentFB,\r\n  addCommentFB,\r\n  setComment,\r\n  addComment,\r\n};\r\n\r\nexport { actionCreators };\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { firestore } from \"../../shared/firebase\";\r\nimport \"moment\";\r\nimport moment from \"moment\";\r\nimport firebase from \"firebase/compat\";\r\nimport { actionCreators as postActions } from \"./post\";\r\n\r\nconst SET_HEART = \"SET_HEART\";\r\nconst ADD_HEART = \"ADD_HEART\";\r\nconst CANCEL_HEART = \"CANCEL_LIKE\";\r\n\r\nconst setHeart = createAction(SET_HEART, (post_id, user_list) => ({\r\n  post_id,\r\n  user_list,\r\n}));\r\nconst addHeart = createAction(ADD_HEART, (post_id, user_id) => ({\r\n  post_id,\r\n  user_id,\r\n}));\r\n\r\nconst cancelHeart = createAction(CANCEL_HEART, (post_id, user_id) => ({\r\n  post_id,\r\n  user_id,\r\n}));\r\n\r\nconst initialState = {\r\n  list: {},\r\n};\r\n\r\nconst getHeartFB = (post_id = null) => {\r\n  return function (dispatch, getState, { history }) {\r\n    if (!post_id) {\r\n      return;\r\n    }\r\n    const heartDB = firestore.collection(\"heart\");\r\n    heartDB\r\n      .where(\"post_id\", \"==\", post_id)\r\n      .get()\r\n      .then((docs) => {\r\n        let list = [];\r\n        docs.forEach((doc) => {\r\n          list.push(doc.data().user_id);\r\n        });\r\n        console.log(list);\r\n\r\n        dispatch(setHeart(post_id, list));\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"좋아요 정보를 가져올수 없습니다\", err);\r\n      });\r\n  };\r\n};\r\n\r\nconst addHeartFB = (post_id) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const heartDB = firestore.collection(\"heart\");\r\n    const user_info = getState().user.user;\r\n    console.log(post_id);\r\n    let heart = {\r\n      user_name: user_info.user_name,\r\n      post_id: post_id,\r\n      user_id: user_info.uid,\r\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n    };\r\n\r\n    heartDB.add(heart).then((doc) => {\r\n      const postDB = firestore.collection(\"post\");\r\n\r\n      const post = getState().post.list.find((l) => l.id === post_id);\r\n\r\n      const increment = firebase.firestore.FieldValue.increment(1);\r\n\r\n      heart = { ...heart, id: doc.id };\r\n\r\n      postDB\r\n        .doc(post_id)\r\n        .update({ heart_cnt: increment })\r\n        .then((_post) => {\r\n          dispatch(addHeart(post_id, user_info.uid));\r\n\r\n          if (post) {\r\n            dispatch(\r\n              postActions.editPost(post_id, {\r\n                heart_cnt: parseInt(post.heart_cnt) + 1,\r\n              })\r\n            );\r\n          }\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nconst cancelHeartFB = (post_id) => {\r\n    return function (dispatch, getState, {history}){\r\n        const heartDB = firestore.collection(\"heart\");\r\n        const user_info = getState().user.user.uid;\r\n        // console.log(post_id, user_info)\r\n        heartDB\r\n            .where(\"post_id\", \"==\", post_id)\r\n            .where(\"user_id\", \"==\", user_info)\r\n            .get()\r\n            .then((docs) => {\r\n                let id = \"\";\r\n                docs.forEach((doc) => (id = doc.id));\r\n                console.log(docs)\r\n                console.log(id)\r\n                // return;\r\n                heartDB.doc(id).delete().then(() => {\r\n                    const postDB = firestore.collection(\"post\");\r\n                    const post = getState().post.list.find((l) => l.id === post_id);\r\n                    console.log(post)\r\n                \r\n                    const uncrement = firebase.firestore.FieldValue.increment(-1);\r\n                    \r\n                    postDB\r\n                        .doc(post_id)\r\n                        .update({heart_cnt : uncrement})\r\n                        .then((_post) => {\r\n                            dispatch(cancelHeart(post_id, user_info));\r\n                            if(post){\r\n                                if(parseInt(post.heart_cnt) === 0) {\r\n                                    return;\r\n                                }\r\n                            }\r\n                            dispatch(postActions.editPost(post_id, {\r\n                                heart_cnt: parseInt(post.heart_cnt) -1,\r\n                            }))\r\n                        });\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_HEART]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list[action.payload.post_id] = action.payload.user_list;\r\n      }),\r\n    [ADD_HEART]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list[action.payload.post_id].push(action.payload.user_id);\r\n      }),\r\n    [CANCEL_HEART]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list[action.payload.post_id] = draft.list[\r\n            action.payload.post_id].filter((l) => l !== action.payload.user_id);\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst actionCreators = {\r\n  getHeartFB,\r\n  addHeartFB,\r\n  cancelHeartFB,\r\n  setHeart,\r\n  addHeart,\r\n  cancelHeart,\r\n};\r\n\r\nexport { actionCreators };\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport User from \"./modules/user\";\r\nimport Post from \"./modules/post\";\r\nimport Image from \"./modules/image\";\r\nimport Comment from \"./modules/comment\";\r\nimport Heart from \"./modules/heart\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  user: User,\r\n  post: Post,\r\n  image: Image,\r\n  comment: Comment,\r\n  heart: Heart,\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst middlewares = [thunk.withExtraArgument({ history: history })];\r\n\r\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\r\nconst env = process.env.NODE_ENV;\r\n\r\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\r\nif (env === \"development\") {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nlet store = (initialStore) => createStore(rootReducer, enhancer);\r\n\r\nexport default store();","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Grid = (props) => {\r\n    const {is_flex, width, margin, padding, bg, children, center, _onClick} = props;\r\n    \r\n    const styles = {\r\n        is_flex: is_flex,\r\n        width: width,\r\n        margin: margin,\r\n        padding: padding,\r\n        bg: bg,\r\n        center: center,\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <GridBox {...styles} onClick={_onClick}>\r\n                {children}\r\n            </GridBox>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nGrid.defalutProps = {\r\n    children: null,\r\n    is_flex: false,\r\n    width: \"100%\",\r\n    padding: false,\r\n    margin: false,\r\n    bg: false,\r\n    center: false,\r\n    _onClick: () => {}\r\n};\r\n\r\nconst GridBox = styled.div`\r\n    width: ${(props) => props.width};\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    ${(props) => (props.padding ? `padding: ${props.padding};`: \"\")};\r\n    ${(props) => (props.margin ? `margin: ${props.margin};`: \"\")};\r\n    ${(props) => (props.bg ? `background-color: ${props.bg};`: \"\")};\r\n    ${(props) => \r\n    props.is_flex\r\n    ? `display: flex; align-items: center; justify-content: space-between;` \r\n    : \"\"};\r\n    ${(props) => props.center? `text-align: center;` : \"\"};\r\n`;  \r\n\r\nexport default Grid;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Image = (props) => {\r\n\r\n    const {shape, src, size} = props;\r\n\r\n    const styles = {\r\n        src: src,\r\n        size: size,\r\n\r\n    };\r\n\r\n    if(shape === \"circle\"){\r\n        return (\r\n            <ImageCircle {...styles}></ImageCircle>\r\n        );\r\n    };\r\n\r\n    if(shape === \"rectangle\"){\r\n        return (\r\n            <AspectOutter>\r\n                <AspectInner {...styles}>\r\n\r\n                </AspectInner>\r\n            </AspectOutter>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nImage.defaultProps = {\r\n    shape: \"circle\",\r\n    src: \"https://i.ytimg.com/vi/9J67amvesFg/maxresdefault.jpg\",\r\n    size: 36,\r\n\r\n};\r\n\r\nconst AspectOutter = styled.div`\r\n    width: 100%;\r\n    min-width: 250px;\r\n\r\n`;\r\n\r\nconst AspectInner = styled.div`\r\n    position: relative;\r\n    padding-top: 75%;\r\n    overflow: hidden;\r\n    background-image: url(\"${(props) => props.src}\");\r\n    background-size: cover;\r\n`;\r\n\r\nconst ImageCircle = styled.div`\r\n    --size: ${(props) => props.size}px;\r\n    width: var(--size);\r\n    height: var(--size);\r\n    border-radius: var(--size);\r\n\r\n    background-image: url(\"${(props) => props.src}\");\r\n    background-size: cover;\r\n    margin: 4px;\r\n`;\r\n\r\n\r\n\r\nexport default Image;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = (props) => {\r\n\r\n    const {bold, color, size, children} = props;\r\n\r\n    const styles = {bold: bold, color: color, size:size};\r\n    return(\r\n        <P {...styles}>\r\n            {children}\r\n        </P>\r\n    );\r\n};\r\n\r\nText.defaultProps = {\r\n    children: null,\r\n    bold: false,\r\n    color: \"#222831\",\r\n    size: '14px',\r\n};\r\n\r\nconst P = styled.p`\r\n    color: ${(props) => props.color};\r\n    font-size: ${(props) => props.size};\r\n    font-weight: ${(props) => (props.bold? \"600\" : \"400\")};\r\n`;\r\n\r\nexport default Text;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text, Grid } from \"./index\";\r\n\r\nconst Input = (props) => {\r\n  const { label, placeholder, _onChange, type, multiLine, value, is_submit } = props;\r\n\r\n  if (multiLine) {\r\n    return (\r\n      <Grid>\r\n        {label && <Text margin=\"0px\">{label}</Text>}\r\n        <ElTextarea\r\n          rows={10}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={_onChange}\r\n        ></ElTextarea>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {label && <Text margin=\"0px\">{label}</Text>}\r\n      {is_submit ? <ElInput type={type} placeholder={placeholder} onChange={_onChange} value={value} />\r\n       : <ElInput type={type} placeholder={placeholder} onChange={_onChange} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  multiLine: false,\r\n  label: false,\r\n  placeholder: \"텍스트를 입력해주세요\",\r\n  type: \"text\",\r\n  value: \"\",\r\n  is_submit: false,\r\n  _onchange: () => {},\r\n};\r\n\r\nconst ElTextarea = styled.textarea`\r\n  border: 1px solid black;\r\n  width: 100%;\r\n  padding: 12px 4px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ElInput = styled.input`\r\n  border: 1px solid black;\r\n  width: 100%;\r\n  padding: 12px 4px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = (props) => {\r\n  const { text, _onClick, is_float, children, margin, width, padding } = props;\r\n\r\n  if (is_float) {\r\n    return (\r\n      <React.Fragment>\r\n        <FloatButton onClick={_onClick}>{text? text : children}</FloatButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const styles = {\r\n    margin: margin,\r\n    width: width,\r\n    padding: padding,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElButton {...styles} onClick={_onClick}>{text? text: children}</ElButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: false,\r\n  children: null,\r\n  _onClick: () => {},\r\n  is_float: false,\r\n  margin: false,\r\n  width: '100%',\r\n  padding: '12px 0px',\r\n};\r\n\r\nconst ElButton = styled.button`\r\n  width: ${(props) => props.width};\r\n  background-color: #8977ad;\r\n  color: #ffffff;\r\n  padding: ${(props) => props.padding};\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-radius: 10px;\r\n  ${(props) => (props.margin? `margin: ${props.margin};` : '')}\r\n`;\r\n\r\nconst FloatButton = styled.button`\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #8977ad;\r\n  color: #ffffff;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  font-size: 36px;\r\n  font-weight: 800;\r\n  position: fixed;\r\n  bottom: 50px;\r\n  right: 16px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  border: none;\r\n  border-radius: 50px;\r\n`;\r\n\r\nexport default Button;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Spinner = (props) => {\r\n  const { type, size, is_dim } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SpinnerWrap type={type} is_dim={is_dim}>\r\n        <SpinnerSvg size={size} />\r\n      </SpinnerWrap>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  type: \"inline\", // inline, page\r\n  is_dim: false,\r\n  size: 60,\r\n};\r\n\r\nconst SpinnerWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  ${(props) =>\r\n    props.type === \"page\"\r\n      ? `position: fixed;\r\n        height: 95vh;\r\n        top: 0;\r\n        left: 0;\r\n        padding: 0;\r\n        zIndex: 9999;`\r\n      : ``}\r\n  ${(props) =>\r\n    props.is_dim\r\n      ? `\r\n     background: rgba(0,0,0,0.4); \r\n     height: 100vh;\r\n  `\r\n      : ``}\r\n`;\r\n\r\nconst SpinnerSvg = styled.div`\r\n  --size: ${(props) => props.size}px;\r\n  width: var(--size);\r\n  height: var(--size);\r\n  background-image: url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='margin: auto; background: none; display: block; shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cg transform='rotate(0 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.9166666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(30 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.8333333333333334s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(60 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.75s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(90 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.6666666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(120 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.5833333333333334s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(150 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.5s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(180 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.4166666666666667s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(210 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.3333333333333333s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(240 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.25s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(270 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.16666666666666666s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(300 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='-0.08333333333333333s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3Cg transform='rotate(330 50 50)'%3E%3Crect x='47' y='24' rx='3' ry='3.36' width='6' height='12' fill='%23222222'%3E%3Canimate attributeName='opacity' values='1;0' keyTimes='0;1' dur='1s' begin='0s' repeatCount='indefinite'%3E%3C/animate%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\r\n  background-size: var(--size);\r\n`;\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport HeartOut from \"@material-ui/icons/Favorite\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Text } from \"../elements\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators as heartActions } from \"../redux/modules/heart\";\r\n\r\nconst Heart = (props) => {\r\n    const heart_list = useSelector((state) => state.heart.list);\r\n    const user_info = useSelector((state) => state.user.user);\r\n    const post_id = props.post_id;\r\n    const dispatch = useDispatch();\r\n    const [toggle, setToggle] = React.useState(false);\r\n    console.log(toggle)\r\n\r\n    React.useEffect(() => {\r\n        if(heart_list[post_id]?.includes(user_info?.uid)){\r\n            setToggle(true);\r\n        }else {\r\n            setToggle(false);\r\n        }\r\n    });\r\n    const updateHeart = () => {\r\n        if(!user_info){\r\n            window.alert(\"로그인을 해주세요!\")\r\n        }else if(!heart_list[post_id]?.includes(user_info?.uid)) {\r\n            dispatch(heartActions.addHeartFB(post_id))\r\n        }else if(heart_list[post_id]?.includes(user_info?.uid)){\r\n            dispatch(heartActions.cancelHeartFB(post_id))\r\n        }\r\n        \r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <IconButton onClick={updateHeart} >\r\n                <HeartOut style={toggle ? {color:\"red\" } : {color:\"grey\"}} fontSize=\"large\"></HeartOut>\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Heart;","import React from \"react\";\r\nimport { Grid, Image, Text, Button } from \"../elements/index\";\r\nimport Heart from \"./Heart\";\r\nimport {history} from \"../redux/configureStore\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as heartActions } from \"../redux/modules/heart\";\r\n\r\nconst Post = (props) => {\r\n  const list = useSelector((state) => state.names);\r\n  const { user_info,\r\n    image_url,\r\n    contents,\r\n    like_cnt,\r\n    insert_dt,\r\n    id,\r\n    names,\r\n    comment_cnt,} = props;\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n    React.useEffect(() => {\r\n      dispatch(heartActions.getHeartFB(id));\r\n    }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Grid is_flex>\r\n          <Grid is_flex>\r\n            <Image shape=\"circle\" scr={props.src} />\r\n            <Text bold>{props.user_info.user_name}</Text>\r\n          </Grid>\r\n          <Grid is_flex>\r\n            <Text>{props.insert_dt}</Text>\r\n            {props.is_me && \r\n            <Button margin=\"0px 0px 0px 10px\" width=\"auto\" padding=\"4px\"\r\n            _onClick={() => { history.push(`/write/${props.id}`)}}>수정</Button>}\r\n          </Grid>\r\n        </Grid>\r\n        {names==\"left\" && <Grid is_flex>\r\n          <Image shape=\"rectangle\" src={props.image_url} />\r\n          <Text>{props.contents}</Text>\r\n        </Grid>}\r\n        {names==\"right\" && <Grid is_flex>\r\n          <Text>{props.contents}</Text>\r\n          <Image shape=\"rectangle\" src={props.image_url} />\r\n        </Grid>}\r\n        {names==\"down\" && <Grid>\r\n          <Text>{props.contents}</Text>\r\n          <Image shape=\"rectangle\" src={props.image_url} />\r\n        </Grid>}\r\n        <Grid padding=\"16px\">\r\n          <Grid is_flex width=\"90px\">\r\n            <Heart post_id={id} />\r\n            <Text margin=\"0px\" bold>\r\n            {props.heart_cnt}개\r\n            </Text>\r\n          </Grid>\r\n          <Text margin=\"0px\" bold>\r\n          댓글 {props.comment_cnt}개\r\n          </Text>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPost.defaultProps = {\r\n  user_info: {\r\n    user_name: \"junmyung\",\r\n    user_profile: \"https://i.ytimg.com/vi/9J67amvesFg/maxresdefault.jpg\",\r\n  },\r\n  image_url: \"https://i.ytimg.com/vi/9J67amvesFg/maxresdefault.jpg\",\r\n  contents: \"아이언맨\",\r\n  comment_cnt: 10,\r\n  heart_cnt: 10,\r\n  insert_dt: \"2021-11-29 17:00:00\",\r\n  is_me: false,\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Spinner } from \"../elements\";\r\n\r\nconst InfinityScroll = (props) => {\r\n\r\n    const {children, callNext, is_next, loading} = props;\r\n\r\n    const _handleScroll = _.throttle(() => {\r\n\r\n        if(loading){\r\n            return;\r\n        }\r\n\r\n        const {innerHeight} = window;\r\n        const {scrollHeight} = document.body;\r\n\r\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\r\n\r\n        if(scrollHeight - innerHeight - scrollTop < 200) {\r\n            callNext();\r\n        }\r\n    }, 300);\r\n\r\n    const handleScroll = React.useCallback(_handleScroll, [loading]);\r\n\r\n    React.useEffect(() => {\r\n\r\n        if(loading){\r\n            return;\r\n        }\r\n\r\n        if(is_next){\r\n            window.addEventListener(\"scroll\", handleScroll);\r\n        }else{\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        }\r\n        \r\n\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n    }, [is_next, loading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.children}\r\n            {is_next && (<Spinner/>)}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nInfinityScroll.defaultProps = {\r\n    children: null,\r\n    callNext: () => {},\r\n    is_next: false,\r\n    loading: false,\r\n\r\n}\r\n\r\nexport default InfinityScroll;","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport { Grid } from \"../elements\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\nimport InfinityScroll from \"../shared/infinityScroll\";\r\n\r\nconst PostList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const post_list = useSelector((state) => state.post.list);\r\n  const user_info = useSelector((state) => state.user.user);\r\n  const is_loading = useSelector((state) => state.post.is_loading);\r\n  const paging = useSelector((state) => state.post.paging);\r\n  const { history } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (post_list.length < 2) {\r\n      dispatch(postActions.getPostFB());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid bg=\"#ebe7f1\" padding=\"20px 0px 0px 0px\">\r\n        <InfinityScroll\r\n          callNext={() => {\r\n            dispatch(postActions.getPostFB(paging.next));\r\n          }}\r\n          is_next={paging.next ? true : false}\r\n          loading={is_loading}\r\n        >\r\n          {post_list.map((p, idx) => {\r\n            if (p.user_info.user_id === user_info?.uid) {\r\n              return (\r\n                <Grid bg=\"white\" margin=\"0px 0px 10px 0px\"\r\n                  key={p.id}\r\n                  _onClick={() => {\r\n                    history.push(`/post/${p.id}`);\r\n                  }}\r\n                >\r\n                  <Post {...p} is_me />\r\n                </Grid>\r\n              );\r\n            } else {\r\n              return (\r\n                <Grid bg=\"white\" margin=\"0px 0px 10px 0px\"\r\n                  key={p.id}\r\n                  _onClick={() => {\r\n                    history.push(`/post/${p.id}`);\r\n                  }}\r\n                >\r\n                  <Post {...p} />\r\n                </Grid>\r\n              );\r\n            }\r\n          })}\r\n        </InfinityScroll>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","export const emailCheck = (email) => {\r\n    let _reg = /^[0-9a-zA-Z]([-_.0-9a-zA-Z])*@[0-9a-zA-Z]([-_.0-9a-zA-Z])*.([a-zA-Z])*/;\r\n\r\n    return _reg.test(email);\r\n}","import React from \"react\";\r\nimport { Text, Input, Grid, Button } from \"../elements\";\r\nimport { setCookie, getCookie, deleteCookie } from \"../shared/Cookie\";\r\n\r\nimport {useDispatch} from \"react-redux\"\r\nimport {actionCreators as userActions} from \"../redux/modules/user\";\r\nimport { emailCheck } from \"../shared/common\";\r\n\r\nconst Login = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n  const [pwd, setPwd] = React.useState(\"\");\r\n  \r\n\r\n  const login = () => {\r\n\r\n    if(id === \"\" || pwd === \"\"){\r\n      window.alert(\"아이디 혹은 비밀번호가 공란입니다!\")\r\n      return;\r\n    }\r\n\r\n    if(!emailCheck(id)){\r\n      window.alert(\"이메일 형식이 맞지 않습니다!\")\r\n      return;\r\n    }\r\n    \r\n    dispatch(userActions.loginFB(id, pwd));\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        <Text size=\"32px\" bold>\r\n          로그인\r\n        </Text>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setId(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"패스워드\"\r\n            placeholder=\"패스워드 입력해주세요.\"\r\n            type=\"password\"\r\n            _onChange={(e) => {\r\n              setPwd(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Button\r\n          text=\"로그인하기\"\r\n          _onClick={() => {\r\n            console.log(\"로그인 했어!\");\r\n            login();\r\n          }}\r\n        ></Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Grid, Text, Input, Button } from \"../elements\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\nimport { emailCheck } from \"../shared/common\";\r\n\r\n\r\n\r\nconst Signup = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState('');\r\n  const [pwd, setPwd] = React.useState('');\r\n  const [pwd_check, setPwdCheck] = React.useState('');\r\n  const [user_name, setUserName] = React.useState('');\r\n\r\n\r\n  const signup = () => {\r\n\r\n    if(id === '' || pwd === \"\" || user_name === \"\"){\r\n      window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\");\r\n      return;\r\n    }\r\n\r\n    if(!emailCheck(id)){\r\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\r\n      return;\r\n    }\r\n\r\n    if(pwd !== pwd_check){\r\n      window.alert(\"비밀번호가 일치하지 않습니다!\");\r\n      return;\r\n    }\r\n\r\n    dispatch(userActions.signupFB(id, pwd, user_name));\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        <Text size=\"32px\" bold>\r\n          회원가입\r\n        </Text>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setId(e.target.value)\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"닉네임\"\r\n            placeholder=\"닉네임을 입력해주세요.\"\r\n            _onChange={(e) => {\r\n              setUserName(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"비밀번호\"\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            type=\"password\"\r\n            _onChange={(e) => {\r\n              setPwd(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"16px 0px\">\r\n          <Input\r\n            label=\"비밀번호 확인\"\r\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n            type=\"password\"\r\n            _onChange={(e) => {\r\n              setPwdCheck(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Button text=\"회원가입하기\" _onClick={signup}></Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSignup.defaultProps = {};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"../elements\";\r\nimport { storage } from \"./firebase\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\r\n\r\nconst Upload = (props) => {\r\n    const is_uploading = useSelector(state => state.image.uploading);\r\n    const fileInput = React.useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const selectFile = (e) => {\r\n        \r\n\r\n        const reader = new FileReader();\r\n        const file = fileInput.current.files[0];\r\n\r\n        reader.readAsDataURL(file);\r\n\r\n        reader.onloadend = () => {\r\n            console.log(reader.result);\r\n            dispatch(imageActions.setPreview(reader.result))\r\n        }\r\n    }\r\n\r\n    const uploadFB = () => {\r\n        let image = fileInput.current.files[0];\r\n        dispatch(imageActions.uploadImageFB(image));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input ref={fileInput} type=\"file\" onChange={selectFile} disabled={is_uploading}/>\r\n            <Button _onClick={uploadFB}>업로드하기</Button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Upload;","import React from \"react\";\r\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\r\nimport Upload from \"../shared/Upload\";\r\n\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\r\n\r\nconst PostWrite = (props) => {\r\n    const dispatch = useDispatch();\r\n    const is_login = useSelector((state) => state.user.is_login);\r\n    const preview = useSelector((state) => state.image.preview)\r\n    const post_list = useSelector((state) => state.post.list);\r\n\r\n    const post_id = props.match.params.id;\r\n    const is_edit = post_id? true: false;\r\n\r\n    const {history} = props;\r\n\r\n    let _post = is_edit? post_list.find((p) => p.id === post_id) : null;\r\n\r\n    const [contents, setContents] = React.useState(_post? _post.contents : \"\");\r\n    const [names, setNames] = React.useState(\"down\")\r\n\r\n    React.useEffect(() => {\r\n        if(is_edit && !_post){\r\n            window.alert('포스트 정보가 없어요!');\r\n            history.goBack();\r\n\r\n            return;\r\n        }\r\n\r\n        if(is_edit){\r\n            dispatch(imageActions.setPreview(_post.image_url));\r\n        }\r\n    }, []);\r\n\r\n    const changeContents = (e) => {\r\n        setContents(e.target.value);\r\n    }\r\n\r\n    const addPost = () => {\r\n        dispatch(postActions.addPostFB(contents,names));\r\n    }\r\n\r\n    const editPost = () => {\r\n        dispatch(postActions.editPostFB(post_id, {contents: contents, names: names}))\r\n    }\r\n\r\n    const check_button = (e) =>{\r\n        setNames(e.target.value);\r\n    }\r\n    console.log()\r\n\r\n    if(!is_login){\r\n        return (\r\n            <Grid margin=\"100px 0px\" padding=\"16px\" center>\r\n                <Text size=\"32px\" bold>앗! 잠깐!</Text>\r\n                <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\r\n                <Button _onClick={() => {history.replace(\"/login\")}}>로그인 하러가기</Button>\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid padding=\"16px\">\r\n                <Text margin=\"0px\" size=\"36px\" bold>\r\n                    {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\r\n                </Text>\r\n                <Upload/>\r\n            </Grid>\r\n            <Grid padding=\"16px\">\r\n                <Text margin=\"0px\" size=\"24px\" bold>미리보기</Text>\r\n                <Grid is_flex width=\"500px\">\r\n                    \r\n                    <Grid is_flex width=\"100px\">\r\n                        <input type=\"radio\" name=\"layout\" value=\"left\"\r\n                        onChange={check_button}/><Text>좌측 이미지</Text>\r\n                    </Grid>\r\n                    <Grid is_flex width=\"100px\">\r\n                        <input type=\"radio\" name=\"layout\" value=\"right\"\r\n                        onChange={check_button}/><Text>우측 이미지</Text>\r\n                    </Grid>\r\n                    <Grid is_flex width=\"100px\">\r\n                        <input type=\"radio\" name=\"layout\" value=\"down\"\r\n                        onChange={check_button}/><Text>하단 이미지</Text>\r\n                    </Grid>\r\n                </Grid>\r\n                {names === \"left\" && (<Grid is_flex>\r\n                    <Image shape=\"rectangle\" src={preview ? preview : \"https://thumbs.dreamstime.com/b/no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg\"}/>\r\n                    <Text bold size=\"24px\">%%%%%%예시문%%%%%%</Text></Grid>\r\n                )}\r\n                {names === \"right\" && (<Grid is_flex>\r\n                    <Text bold size=\"24px\">%%%%%%예시문%%%%%%</Text>\r\n                    <Image shape=\"rectangle\" src={preview ? preview : \"https://thumbs.dreamstime.com/b/no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg\"}/>\r\n                    </Grid>\r\n                )}\r\n                {names === \"down\" && (<Grid>\r\n                    <Text bold size=\"24px\">%%%%%%예시문%%%%%%</Text>\r\n                    <Image shape=\"rectangle\" src={preview ? preview : \"https://thumbs.dreamstime.com/b/no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482953.jpg\"}/>\r\n                    </Grid>\r\n                )}\r\n                \r\n                \r\n            </Grid>\r\n            <Grid padding=\"16px\">\r\n                <Input\r\n                value = {contents} \r\n                _onChange={changeContents} \r\n                multiLine label=\"게시글 내용\" \r\n                placeholder=\"게시글 작성\"/>\r\n            </Grid>\r\n            <Grid padding=\"16px\">\r\n                {is_edit? (<Button text=\"게시글 수정\" _onClick={editPost}></Button>) : \r\n                <Button text=\"게시글 작성\" _onClick={addPost}></Button>}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PostWrite;","import React from \"react\";\r\nimport { Grid, Image, Text } from \"../elements\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\r\nimport post from \"../redux/modules/post\";\r\n\r\nconst CommentList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const comment_list = useSelector((state) => state.comment.list);\r\n  const {post_id} = props;\r\n\r\n  React.useEffect(() => {\r\n    if(!comment_list[post_id]){\r\n      dispatch(commentActions.getCommentFB(post_id))\r\n    }\r\n  }, []);\r\n\r\n  if(!comment_list[post_id] || !post_id){\r\n    return null;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        {comment_list[post_id].map(c => {\r\n          return <CommentItem key={c.id} {...c} />;\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCommentList.defaultProps = {\r\n  post_id: null,\r\n}\r\n\r\nexport default CommentList;\r\n\r\nconst CommentItem = (props) => {\r\n  const { user_profile, user_name, user_id, post_id, contents, insert_dt } =\r\n    props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid is_flex>\r\n        <Grid is_flex width=\"auto\">\r\n          <Image shape=\"circle\" />\r\n          <Text bold>{user_name}</Text>\r\n        </Grid>\r\n        <Grid>\r\n          <Text margin=\"0px\">{contents}</Text>\r\n        </Grid>\r\n        <Grid margin=\"0px 4px\">\r\n          <Text margin=\"0px\">{insert_dt}</Text>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCommentItem.defaultProps = {\r\n  user_profile: \"\",\r\n  user_name: \"junmyung\",\r\n  user_id: \"\",\r\n  post_id: 1,\r\n  contents: \"쭌이다\",\r\n  insert_dt: \"2021-01-01 22:00:00\",\r\n};\r\n","import React from \"react\";\r\nimport { Button, Grid, Input } from \"../elements\";\r\n\r\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst CommentWrite = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [comment_text, setCommentText ] = React.useState();\r\n\r\n    const {post_id} = props;\r\n    const onChange = (e) => {\r\n        setCommentText(e.target.value);\r\n    }\r\n\r\n    const write = () => {\r\n        console.log(comment_text);\r\n        dispatch(commentActions.addCommentFB(post_id, comment_text));\r\n        setCommentText(\"\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid padding=\"16px\" is_flex >\r\n                <Input placeholder=\"댓글 내용을 입력하세요 :\" \r\n                _onChange={onChange} \r\n                value={comment_text}\r\n                is_submit\r\n                />\r\n                <Button width=\"50px\" margin=\"0px 2px 0px 2px\"\r\n                _onClick={write}>작성</Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CommentWrite;\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { apiKey } from \"./firebase\";\r\n\r\nconst Permit = (props) => {\r\n    const is_login = useSelector((state) => state.user.is_login);\r\n    const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\r\n    const is_session = sessionStorage.getItem(_session_key)? true: false;\r\n\r\n    if(is_session && is_login){\r\n        return <React.Fragment>{props.children}</React.Fragment>\r\n    }\r\n\r\n    return null;\r\n    \r\n};\r\n\r\nexport default Permit;","import React from \"react\";\r\nimport Post from \"../components/Post\";\r\nimport CommentList from \"../components/CommentList\";\r\nimport CommentWrite from \"../components/CommentWrite\";\r\n\r\nimport Permit from \"../shared/Permit\";\r\n\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport { actionCreators as postActions} from \"../redux/modules/post\";\r\n\r\n\r\nconst PostDetail = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n\r\n  const user_info = useSelector((state) => state.user.user);\r\n\r\n  const post_list = useSelector(store => store.post.list);\r\n  const post_idx = post_list.findIndex(p => p.id === id);\r\n  const post = post_list[post_idx];\r\n\r\n  React.useEffect(() => {\r\n\r\n    if(post){\r\n      return;\r\n    }\r\n\r\n    dispatch(postActions.getOnePostFB(id));\r\n    \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {post && <Post {...post} is_me={post.user_info.user_id === user_info?.uid}/>}\r\n      <Permit>\r\n        <CommentWrite post_id={id}/>\r\n      </Permit>\r\n      <CommentList post_id={id}/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetail;","import React from \"react\";\r\nimport { Grid, Text, Button } from \"../elements\";\r\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\n\r\nimport {history} from \"../redux/configureStore\";\r\nimport { apiKey } from \"../shared/firebase\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst Header = (props) => {\r\n    const dispatch = useDispatch();\r\n    const is_login = useSelector((state) => state.user.is_login);\r\n    \r\n    const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\r\n\r\n    const is_session = sessionStorage.getItem(_session_key)? true: false;\r\n    console.log(_session_key);\r\n    console.log(sessionStorage.getItem(_session_key));\r\n    console.log(is_session);\r\n    if(is_login && is_session){\r\n        return (\r\n            <React.Fragment>\r\n            <Grid is_flex padding=\"4px 16px\">\r\n                <Grid>\r\n                <Text margin=\"0px\" size=\"24px\" bold>\r\n                    <HomeIcon onClick={() => {\r\n                        history.push(\"/\")\r\n                    }} color=\"primary\"/>\r\n                </Text>\r\n                </Grid>\r\n    \r\n                <Grid is_flex>\r\n                <Button margin=\"0px 10px 0px 0px\" width=\"150px\" text=\"내정보\"></Button>\r\n                <Button margin=\"0px 10px 0px 0px\" text=\"알림\"></Button>\r\n                <Button text=\"로그아웃\" _onClick={() => {\r\n                    dispatch(userActions.logoutFB());\r\n                }}></Button>\r\n                </Grid>\r\n            </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Grid is_flex padding=\"4px 16px\">\r\n            <Grid>\r\n            <Text margin=\"0px\" size=\"24px\" bold>\r\n                헬로\r\n            </Text>\r\n            </Grid>\r\n\r\n            <Grid is_flex width=\"200px\">\r\n            <Button text=\"회원가입\" _onClick={() => {\r\n                history.push(\"/signup\");\r\n            }}></Button>\r\n            <Button text=\"로그인\" _onClick={() => {\r\n                history.push(\"/login\");\r\n            }}></Button>\r\n            </Grid>\r\n        </Grid>\r\n        </React.Fragment>\r\n    );\r\n    };\r\n\r\nHeader.defaultProps = {};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport \"./App.css\";\n\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\n\nimport PostList from \"../pages/PostList\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostDetail from \"../pages/PostDetail\";\n\nimport Header from \"../components/Header\";\nimport { Button, Grid } from \"../elements\";\nimport Permit from \"./Permit\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { apiKey } from \"./firebase\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  React.useEffect(() => {\n    if (is_session) {\n      dispatch(userActions.loginCheckFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n        <Grid>\n          <Header></Header>\n          <ConnectedRouter history={history}>\n            <Route path=\"/\" exact component={PostList} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/signup\" exact component={Signup} />\n            <Route path=\"/write\" exact component={PostWrite} />\n            <Route path=\"/write/:id\" exact component={PostWrite} />\n            <Route path=\"/post/:id\" exact component={PostDetail} />\n          </ConnectedRouter>\n        </Grid>\n        <Permit>\n          <Button\n            is_float\n            text=\"+\"\n            _onClick={() => {\n              history.push(\"/write\");\n            }}\n          ></Button>\n        </Permit>\n    </React.Fragment>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shared/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\n\nimport store from \"./redux/configureStore\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}